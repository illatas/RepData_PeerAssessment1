utils:::menuInstallPkgs()
library(swirl)
utils:::menuInstallPkgs()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
utils:::menuInstallPkgs()
library(Rcpp)
utils:::menuInstallLocal()
install.packages("swirl")
q()
setwd("~/")
load("~/Coursera/Second week/.RData")
setwd("~/Coursera/Reproducible Research")
setwd("~/Coursera/Reproducible Research/Week 1")
install.packages("knitr")
setwd("~/Coursera/Reproducible Research/Week 1/RepData_PeerAssessment1")
unzip("activity.zip"")
unzip("activity.zip")
activity.r<-read.csv("activity.csv")
dim(activity.r)
names(activity.r)
head(activity.r)
str(activity.r)
as.character(activit.r[1:10,2])
as.character(activity.r[1:10,2])
attach(activity.r)
summary(interval)
plot(interval)
plot(interval)
summary(interval)
table(date)
View(activity.r)
x<-strptime(as.character(activity.r[,2],"%d/%m/%Y")
x<-strptime(as.character(activity.r[,2]),"%d/%m/%Y")
activity.a<-activity.r
activity.a[,2]<-x
x
x=as.Date.factor(activity.r[,2])
summary(x)
x<-strptime(as.character(activity.r[,2]),"%Y/%m/%d")
summary(x)
x=as.Date.factor(activity.r[,2])
activity<-read.csv("activity.csv")
activity[,2]<-as.Date.factor(activity.r[,2])
View(activity)
?strptime
?as.Date.factor
x<-strptime(as.character(activity.r[,2]),"%Y-%m-%d")
summary(x)
activity<-read.csv("activity.csv")
activity[,2]<-strptime(as.character(activity.r[,2]),"%Y-%m-%d")
strptime(as.character(activity.r[,2]),"%Y-%m-%d")
x<-strptime(as.character(activity.r[,2]),"%Y-%m-%d")
attributes(x)
Date<-strptime(as.character(activity.r[,2]),"%Y-%m-%d")
?aggregate.ts
names(activity)
activity<-read.csv("activity.csv")
Date<-strptime(as.character(activity.r[,2]),"%Y-%m-%d")
av.act<-with(activity,aggregate(steps~interval,FUN=function(x) sum(x,na.rm=TRUE))
)
ts.plot(av.act)
av.act<-with(activity,aggregate(steps~interval,FUN=function(x) mean(x,na.rm=TRUE)))
ts.plot(av.act)
av.act
ts.plot(av.act[,2])
names(av.act)
head(av.act)
with(av.act,ts.plot(steps))
```{r}
summary(cars)
```
names(activity)
str(activity)
activity<-read.csv("activity.csv")
Date<-strptime(as.character(activity.r[,2]),"%Y-%m-%d")
av.act<-with(activity,aggregate(steps~interval,FUN=function(x) mean(x,na.rm=TRUE)))
with(av.act,ts.plot(steps))
total.steps=with(activity,aggregate(steps~date, FUN=sum,na.rm=TRUE))
plot(total.steps)
hist(total.steps$steps,col="red", main="Total dairy steps")
hist(total.steps$steps,col="red", main="Total dairy steps",xlab="Total Steps")
abline(v=mean(total.steps$steps),lwd=4,col="blue")
text(mean(total.steps$steps))
text(10500, "mean", pos=2,col="blue")
text(10500,35, "mean", pos=2,col="blue")
?text
hist(total.steps$steps,col="red", main="Total dairy steps",xlab="Total Steps")
abline(v=mean(total.steps$steps),lwd=4,col="blue")
text(10500,35, "mean", pos=2,col="blue")
text(15,35, "mean", pos=2,col="blue")
av.act<-with(activity,aggregate(steps~interval,FUN=function(x) mean(x,na.rm=TRUE)))
with(av.act,ts.plot(ts(steps,freq=12),xlab="Five minute intervals"))
with(av.act,ts.plot(ts(steps,freq=12,start=0),xlab="Five minute intervals"))
with(av.act,ts.plot(ts(steps,freq=12,start=0),xlab="Time (from 0 to 24 hours)",ylab="Average steps",main="Average daily activity pattern"))
av.act
with(activity, aggregate(steps~interval,FUN=function(x,...) sum(is.na(x))))
sum(is.na(activity[,1]))
na.count=table(is.na(activity[,1]),activity[,3])
na.count
8*2355
dim*activity)
dim(activity)
?split
plot(activity[,1],type='l')
plot(Date,activity[,1],type='l')
with(av.act,which.max(steps)
with(av.act,which.max(steps))
av.act$interval[with(av.act,which.max(steps))]
max.act.time=av.act$interval[with(av.act,which.max(steps))]
#Or in hours
max.act.time/12
max.act.time*5/60
max.act.time*5
av.act[,835]
av.act[,104]
av.act[104,]
av.act[102,]
60*24/5
av.act
60*24/5
max.act.time
max.act.time/60
with(av.act,ts.plot(ts(steps,freq=12,start=0),xlab="Time (from 0 to 24 hours)",ylab="Steps",main="Average daily activity pattern"))
av.act[102,]
102/12
abline(v=8.5)
8.5*60
101/12
55%/%12
55%/%60
825%/%60
12*C(1,2,3,4,5,6,7,8,9,10,11)
12*c(1,2,3,4,5,6,7,8,9,10,11)
max.act.time
max.act.time[102,]
av.act[102,]
av.act[100:105,]
which.max(av.act$steps)
835/12
12*c(1,2,3,4,5,6,7,8,9,10,11)
plot(activity$interval)
plot(activity$interval[1:12*24])
plot(activity$interval[1:(12*24)])
plot(activity$interval[1:(12*24+3)])
plot(activity$interval[1:(12*24+24)])
plot(activity$interval[1:(12*24+1)])
12*24
av.act[100:105,]
plot(activity$interval[1:(12*24)])
?aggregate
x=activity[,1]
interval=activity[,3]
for(i in unique(interval)){x[is.na(x)&interval==i]=av.act$steps[i]}
for(i in unique(interval)){x[is.na(x)&interval==i]=av.act$steps[i]}
for(i in unique(interval)){
if sum(is.na(x)&interval==i)!=0
for(i in unique(interval)){
if (sum(is.na(x)&interval==i)!=0)
x[is.na(x)&interval==i]=av.act$steps[i]}
names(av.act)
length(interval)
i
sum(interval==0)
av.act$steps[0]
unique(interval)
for(i in unique(interval)){
if (sum(is.na(x)&interval==i)!=0)
x[is.na(x)&interval==i]=av.act$steps[av.act$interval=i]}
x[is.na(x)&interval==i]=av.act$steps[i]}
for(i in unique(interval)){
x[is.na(x)&interval==i]=av.act$steps[av.act$interval=i]}
x=activity[,1]
names(activity)
for(i in unique(y)){
x[is.na(x)&(y==i)]<-av.act$steps[av.act$interval==i]}
names(av.act)
x<-activity[,1]
y<-activity[,3]
for(i in unique(y)){
x[is.na(x)&(y==i)]<-av.act$steps[av.act$interval==i]}
i
av.act[1:10,]
median.act<-with(activity,aggregate(steps~interval,FUN=function(x) median(x,na.rm=TRUE)))
x<-activity[,1]
y<-activity[,3]
for(i in unique(y)){
x[is.na(x)&(y==i)]<-median.act$steps[median.act$interval==i]}
#create a new data.frame
activity.i<-activity
activity.i[,1]<-x
total.steps=with(activity.i,aggregate(steps~date, FUN=sum,na.rm=TRUE))
hist(total.steps$steps,col="red", main="Total dairy steps\n (Imputated data)",xlab="Total Steps")
abline(v=mean(total.steps$steps),lwd=4,col="blue")
mean(total.steps$steps)
median(total.steps$steps)
summary(Date)
summary(weekdays(Date))
table(weekdays(Date))
week.days=weekdays(Date)
week.end=(week.days=="Saturday"|week.days=="Sunday")
table(week.end)
week.days=weekdays(Date)
week.end=(week.days=="Saturday"|week.days=="Sunday")
activity.wd=activity[!week.end,]
activity.we=activity[week.end,]
av.act.wd<-with(activity.wd,aggregate(steps~interval,FUN=function(x) mean(x,na.rm=TRUE)))
av.act.we<-with(activity.we,aggregate(steps~interval,FUN=function(x) mean(x,na.rm=TRUE)))
par(mfrow=c(1,2))
with(av.act.we,ts.plot(ts(steps,freq=12,start=0),xlab="Time (from 0 to 24 hours)",ylab="Steps",main="Average daily activity pattern\n Weekend"))
week.days=weekdays(Date)
week.end=(week.days=="Saturday"|week.days=="Sunday")
activity.wd=activity[!week.end,]
activity.we=activity[week.end,]
av.act.wd<-with(activity.wd,aggregate(steps~interval,FUN=function(x) mean(x,na.rm=TRUE)))
av.act.we<-with(activity.we,aggregate(steps~interval,FUN=function(x) mean(x,na.rm=TRUE)))
par(mfrow=c(2,1))
with(av.act.wd,ts.plot(ts(steps,freq=12,start=0),xlab="Time (from 0 to 24 hours)",ylab="Steps",main="Average daily activity pattern\n Week days"))
with(av.act.we,ts.plot(ts(steps,freq=12,start=0),xlab="Time (from 0 to 24 hours)",ylab="Steps",main="Average daily activity pattern\n Weekend"))
